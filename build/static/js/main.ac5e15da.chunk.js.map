{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Form","newName","newPerson","handleNameChange","newNumber","handleNumberChange","onSubmit","required","value","onChange","type","Entry","person","setPersons","persons","setMessage","setType","name","number","data-id","onClick","e","Number","target","dataset","filter","window","confirm","personService","setTimeout","catch","console","log","message","Numbers","filtered","newSearch","filteredPersons","toLowerCase","includes","searchArray","length","map","key","Notification","className","App","useState","setNewName","setNewNumber","setNewSearch","setFiltered","useEffect","initialPeople","preventDefault","personObject","some","find","p","changedPerson","updatedPerson","returnedPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"+OACMA,EAAU,eAsBD,EAnBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAiB5B,EAdA,SAACC,GAEd,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAY5B,EATA,SAACG,GAEd,OADgBP,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BQ,IAC5BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAO5B,EAJA,SAACG,EAAIF,GAElB,OADgBL,IAAMS,IAAN,UAAaV,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,oOCjB3C,IAAMM,EAAO,SAAC,GAA2E,IAA1EC,EAAyE,EAAzEA,QAASC,EAAgE,EAAhEA,UAAWC,EAAqD,EAArDA,iBAAkBC,EAAmC,EAAnCA,UAAUC,EAAyB,EAAzBA,mBAC7D,OACE,0BAAMC,SAAUJ,GACd,sCACQ,2BAAOK,UAAQ,EACnBC,MAAOP,EACPQ,SAAUN,IACZ,6BAJF,WAKU,2BAAOI,UAAQ,EACrBC,MAAOJ,EACPK,SAAUJ,KAGd,6BACE,4BAAQK,KAAK,UAAb,UAMFC,EAAQ,SAAC,GAAwD,IAAvDC,EAAsD,EAAtDA,OAAQC,EAA8C,EAA9CA,WAAYC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,QAwBvD,OACE,6BACE,2BACGJ,EAAOK,KADV,IACiBL,EAAOM,OACtB,4BAAQC,UAASP,EAAOf,GAAIuB,QA3Bb,SAACC,GACpB,IAAMxB,EAAKyB,OAAOD,EAAEE,OAAOC,QAAQ3B,IAE7BoB,EADWH,EAAQW,QAAO,SAAAb,GAAM,OAAIA,EAAOf,KAAOA,KAClC,GAAT,KACK6B,OAAOC,QAAP,iBAAyBV,EAAzB,OAGhBW,EACU/B,GACPL,MAAM,WACLqB,EAAWC,EAAQW,QAAO,SAAAb,GAAM,OAAIA,EAAOf,KAAOA,MAClDmB,EAAQ,WACRD,EAAW,WAAD,OAAYE,IAEtBY,YAAY,WACVd,EAAW,QACV,QAGJe,OAAM,SAAAT,GAAC,OAAIU,QAAQC,IAAIX,EAAEY,cAQ1B,aAQFC,EAAU,SAAC,GAAqE,IAApEpB,EAAmE,EAAnEA,QAASqB,EAA0D,EAA1DA,SAAUC,EAAgD,EAAhDA,UAAWvB,EAAqC,EAArCA,WAAYE,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,QAChEqB,EAAkBvB,EAAQW,QAAO,SAAAb,GAAM,OAC3CA,EAAOK,KAAKqB,cAAcC,SAASH,EAAUE,kBACzCE,EAAcL,EAAWE,EAAiBvB,EAYhD,OAA2B,IAAvB0B,EAAYC,OAEZ,sEAbeD,EAAYE,KAAI,SAAA9B,GAAM,OACvC,kBAAC,EAAD,CACE+B,IAAK/B,EAAOK,KACZL,OAAQA,EACRC,WAAYA,EACZC,QAASA,EACTC,WAAYA,EACZC,QAASA,QAiBT4B,EAAe,SAAC,GAAqB,IAApBX,EAAmB,EAAnBA,QAASvB,EAAU,EAAVA,KAC9B,OAAgB,OAAZuB,EACK,KAEI,YAATvB,EAEA,yBAAKmC,UAAU,WACZZ,GAKH,yBAAKY,UAAU,SACZZ,IAgIMa,EAxHH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACRjC,EADQ,KACCD,EADD,OAEgBkC,mBAAS,IAFzB,mBAER9C,EAFQ,KAEC+C,EAFD,OAGoBD,mBAAS,IAH7B,mBAGR3C,EAHQ,KAGG6C,EAHH,OAIoBF,mBAAS,IAJ7B,mBAIRX,EAJQ,KAIGc,EAJH,OAKkBH,oBAAS,GAL3B,mBAKRZ,EALQ,KAKEgB,EALF,OAMgBJ,mBAAS,MANzB,mBAMRd,EANQ,KAMClB,EAND,OAOUgC,mBAAS,MAPnB,mBAORrC,EAPQ,KAOFM,EAPE,KAShBoC,qBAAW,WACTxB,IAEGpC,MAAK,SAAA6D,GACJxC,EAAWwC,QAEd,IAsEH,OACE,6BACE,yCAEA,kBAAC,EAAD,CAAcpB,QAASA,EAASvB,KAAMA,IAEtC,kDACoB,2BAChBF,MAAO4B,EACP3B,SAvEmB,SAACY,GAC1B6B,EAAa7B,EAAEE,OAAOf,OACtB2C,EAAgC,KAAnB9B,EAAEE,OAAOf,WAwEpB,uCACA,kBAAC,EAAD,CACEN,UAtEY,SAACmB,GACjBA,EAAEiC,iBACF,IAAMC,EAAe,CACnBtC,KAAMhB,EACNiB,OAAQd,GAEJa,EAAOsC,EAAatC,KACpBC,EAASqC,EAAarC,OAG5B,GAFqBJ,EAAQ0C,MAAK,SAAA5C,GAAM,OAAIA,EAAOK,OAASA,KAE3C,CAEf,GADkBS,OAAOC,QAAP,UAAkBV,EAAlB,+DACH,CAEb,IAAOL,EAAQE,EAAQ2C,MAAK,SAAAC,GAAC,OAAIA,EAAEzC,OAASA,KACtCpB,EAAKe,EAAOf,GACZ8D,E,yVAAa,IAAO/C,EAAP,CAAeM,OAAOA,IACzCU,EACUhB,EAAOf,GAAI8D,GAClBnE,MAAK,SAAAoE,GAAa,OAAI/C,EAAWC,EAAQ4B,KAAI,SAAA9B,GAAM,OAAIA,EAAOf,KAAOA,EAAKe,EAAQgD,SAClF9B,OAAM,SAAAT,GACLU,QAAQC,IAAIX,EAAEY,SACdlB,EAAW,mBAAD,OAAoBE,EAApB,8CACVD,EAAQ,YAGZD,EAAW,4BAAD,OAA6BE,IACvCD,EAAQ,WACRa,YAAY,WACVd,EAAW,QACV,KACHiC,EAAW,IACXC,EAAa,IAIf,OAFAD,EAAW,SACXC,EAAa,IAKfrB,EACU2B,GACP/D,MAAK,SAAAqE,GACJhD,EAAWC,EAAQgD,OAAOD,IAC1B9C,EAAW,SAAD,OAAUE,IACpBD,EAAQ,WACRa,YAAY,WACVd,EAAW,QACV,KACHiC,EAAW,IACXC,EAAa,QAqBbhD,QAASA,EACT+C,WAAYA,EACZ5C,UAAWA,EACX6C,aAAcA,EACd9C,iBAvFmB,SAACkB,GACxB2B,EAAW3B,EAAEE,OAAOf,QAuFhBH,mBArFqB,SAACgB,GAC1B4B,EAAa5B,EAAEE,OAAOf,UAsFpB,uCACA,kBAAC,EAAD,CACEM,QAASA,EACTqB,SAAUA,EACVC,UAAWA,EACXvB,WAAYA,EACZE,WAAYA,EACZC,QAASA,MC3NjB+C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ac5e15da.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\nexport default { getAll, create, remove, update }\n","import React, { useState, useEffect } from 'react';\nimport personService from './services/persons'\nimport './index.css'\n\nconst Form = ({newName, newPerson, handleNameChange, newNumber,handleNumberChange }) => {\n  return (\n    <form onSubmit={newPerson}>\n      <div>\n        name: <input required\n          value={newName}\n          onChange={handleNameChange}/>\n        <br />\n        number: <input required\n          value={newNumber}\n          onChange={handleNumberChange}\n          />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst Entry = ({person, setPersons, persons, setMessage, setType}) => {\n  const handleDelete = (e) => {\n    const id = Number(e.target.dataset.id)\n    const selected = persons.filter(person => person.id === id)\n    const name = selected[0]['name']\n    const confirmed = window.confirm(`Remove ${name}?`)\n\n    if (confirmed){\n      personService\n        .remove(id)\n        .then( () => {\n          setPersons(persons.filter(person => person.id !== id)) \n          setType('success')\n          setMessage(`Deleted ${name}`)\n\n          setTimeout( () => {\n            setMessage(null)\n          }, 5000)\n        })\n\n        .catch(e => console.log(e.message))\n    }\n\n  }\n  return (\n    <div>\n      <p>\n        {person.name} {person.number} \n        <button data-id={person.id} onClick={handleDelete}>delete</button> \n      </p>\n    </div>\n   \n  )\n    \n}\n\nconst Numbers = ({persons, filtered, newSearch, setPersons, setMessage, setType}) => {\n  const filteredPersons = persons.filter(person => \n    person.name.toLowerCase().includes(newSearch.toLowerCase()))\n  const searchArray = filtered ? filteredPersons: persons;\n  const rows = () => searchArray.map(person => \n    <Entry \n      key={person.name}\n      person={person} \n      setPersons={setPersons} \n      persons={persons} \n      setMessage={setMessage}\n      setType={setType}\n    />)\n\n\n  if (searchArray.length === 0){\n    return (\n      <p>No numbers matching those search terms.</p>\n    )\n  }\n  else{\n    return (\n      rows()\n    )\n  }\n\n}\n\nconst Notification = ({message, type}) => {\n  if (message === null){\n    return null\n  }\n  if (type === 'success'){\n    return (\n      <div className='success'>\n        {message}\n      </div>\n    )\n  } else {\n    return (\n      <div className='error'>\n        {message}\n      </div>\n    )\n  }\n\n  \n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')  \n  const [ filtered, setFiltered ] = useState(false)\n  const [ message, setMessage ] = useState(null)\n  const [ type, setType ] = useState(null)\n\n  useEffect( () => {\n    personService\n      .getAll()\n      .then(initialPeople => {\n        setPersons(initialPeople)\n      }) \n  }, [])\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value)\n  }\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value)\n  }\n  const handleSearchChange = (e) => {\n    setNewSearch(e.target.value)\n    setFiltered((e.target.value === '') ? false:true)\n  }\n\n  \n  const newPerson = (e) => {\n    e.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    const name = personObject.name\n    const number = personObject.number\n    const personExists = persons.some(person => person.name === name)\n\n    if (personExists){\n      const confirmed = window.confirm(`${name} already in phone book. Replace old number with a new one?`)\n      if (confirmed) {\n        // post new number\n        const  person= persons.find(p => p.name === name)\n        const id = person.id\n        const changedPerson = {...person, number:number}\n        personService\n          .update(person.id, changedPerson)\n          .then(updatedPerson => setPersons(persons.map(person => person.id !== id ? person: updatedPerson)))\n          .catch(e => {\n            console.log(e.message)\n            setMessage(`Information for ${name} has already been removed from the server`)\n            setType('error')\n          })\n        \n        setMessage(`Updated phone number for ${name}`)\n        setType('success')\n        setTimeout( () => {\n          setMessage(null)\n        }, 5000)\n        setNewName('')\n        setNewNumber('')\n      }\n      setNewName('')\n      setNewNumber('')\n      return\n    }\n    \n    // Create new person in phone book\n    personService\n      .create(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setMessage(`Added ${name}`)\n        setType('success')\n        setTimeout( () => {\n          setMessage(null)\n        }, 5000)\n        setNewName('')\n        setNewNumber('')\n    }) \n\n\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={message} type={type}/>\n\n      <div>\n        filter shown with <input \n          value={newSearch}\n          onChange={handleSearchChange}/>\n\n      </div>\n      <h2>Add New</h2>\n      <Form \n        newPerson={newPerson}\n        newName={newName}\n        setNewName={setNewName}\n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Numbers \n        persons={persons}\n        filtered={filtered}\n        newSearch={newSearch}\n        setPersons={setPersons}\n        setMessage={setMessage}\n        setType={setType}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}